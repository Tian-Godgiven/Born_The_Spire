{"version":17,"entities":[{"location":[-780.2823865958014,-53.895924554122],"size":[92,76],"text":"行为","uuid":"e22879ff-6af5-4024-86dd-046271cbcf1c","details":"## 行为是什么？\n\n行为Behavior是实体Entity参与过程事件的过程，例如打出卡牌，丢弃卡牌，使用药水，使用器官等\n\n进行一个行为将会形成一个过程事件，并触发行为对应的触发器，进而产生效果\n\n### 行为触发器\n\n不同类型的实体会具备不同的行为，例如：\n\n> 卡牌Card的行为包含：使用（useCard)，丢弃（discardCard），消耗（exhaustCard）\n\n这些行为会在实体的数据中以效果的形式记录，并且在生成实体时，创建一系列的on触发器，在触发器启用时产生对应的效果\n\n## 行为的作用过程\n\n行为的作用包含2个部分：行为事件和行为触发器\n\n实体在创建时也会创建一系列的行为触发器，这些行为触发均为”on\"类型，由且仅由对应的过程事件触发\n例如：打击卡牌会创建一个“使用时造成10点伤害”的触发器：on:use=>{造成10点伤害}\n\n在执行一个行为时，会创建一个该行为的过程事件，其中包含行为可能涉及的3个对象：行为来源，行为媒介，行为目标，行为的过程事件通常不具备行为效果\n\n例如：“玩家对小石怪使用卡牌：打击”，此时会产生一个过程事件\n\n~~~~ts\n{\n    行为key：使用卡牌(useCard)\n    行为来源：玩家\n    行为媒介：打击卡牌\n    行为目标：小石怪\n}\n~~~~\n\n随后我们触发这个行为事件，这会导致：触发3个对象的如下触发器的before和after\n\n行为来源 make 行为事件\n行为媒介 on 行为事件\n行为目标 take 行为事件\n\n此时，若实体具备对应的行为，例如：\n\n> 玩家on使用卡牌时，获得1点计数\n> 打击卡牌on使用卡牌时，对目标造成10点伤害\n> 敌人on使用卡牌时，治疗1生命\n\n则其在创建时形成的触发器就会被这个行为事件触发，我们在触发器的回调函数中可以得到这个行为，并对行为的3个对象进行处理，在这里例子中，我们将会做这些事情：\n\n> 玩家的on:useCard触发器：对行为来源，获得1点计数属性值\n> 打击卡牌的on:useCard触发器：对行为目标，造成10点伤害\n> 敌人的on:useCard触发器：对行为目标（即这个敌人）治疗1生命\n\n行为通常涉及3个目标：\n\n例如：玩家对小石怪使用卡牌打击\n\n1.来源：玩家，媒介：打击卡牌，目标：小石怪\n2.调用卡牌的“使用”行为（对象方法）：\n\n1. 1.获取“使用”行为对应的效果\n   2.产生一个“使用卡牌\"过程事件，并触发该过程事件\n2. `{ 来源：玩家， 媒介：打击卡牌， 目标：小石怪， 效果：卡牌的使用效果 }`\n3. 3.通过该过程事件触发来源，媒介，目标的对应行为的触发器，产生效果\n","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-449.53527340793755,-413.3276961943611],"size":[124,76],"text":"触发器","uuid":"b183e091-cbd1-4ea0-b796-8e0c10fe5578","details":"## 触发器是什么？\n\n触发器是某个对象对游戏内的过程事件进行监听，并进行反馈的函数集合\n\n触发器分为3种\n\n主动触发make：该对象是造成事件的一方\n\n被动触发take：该对象是承受事件的一方\n\n总是触发on：在两种情况下都会触发，也可以通过on关键字触发，通常作为实体的行为触发器，例如：on:useCard使用卡片时\n\n## 触发器如何产生作用？\n\n对象在接受到触发信号和对应的过程事件，以过程事件为参数，调用对应的函数\n\n例如 角色受到了10点伤害，将会触发：take “造成伤害” 触发器\n","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-547.120877402688,-144.42895693904376],"size":[156,76],"text":"过程事件","uuid":"8a8d1f62-ec7b-4c54-aac4-3b09e48e7b4f","details":"过程事件\n\n过程事件是调用触发器的重要参数，其本质上是记录发生了什么的对象\n\n分为行为和效果都会构建过程事件，并借此调用触发器，此外效果本身还会接受过程事件作为参数\n\n行为事件\n\n1.事件来源：发起这个事件的目标\n2.事件目标：接受这个事件的目标\n3.效果媒介：产生这个效果的目标或物品\n4.事件效果：这个事件会产生的效果\n\n触发事件\n\n1.事件来源 make \"key\" 到 效果媒介\n2.效果媒介 on \"key“ 来自 事件来源\n3.事件目标 take \"key\" 来自 事件来源\n","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-213.15097351576222,-24.113597534138545],"size":[92,76],"text":"效果","uuid":"e96510a1-f118-43f8-81f0-73a0f76d92fa","details":"# 效果\n\n效果是一个对象，其包含一个对【过程事件】产生反应的函数\n\n这个函数接受一个过程事件作为参数，并对其中的对象进行修改，有时效果本身也作为过程事件的参数\n\n例如：\n\n```ts\n{\n  label:\"造成伤害\",\n  value:10,\n    effect:({source,medium,target,effect})=>{\n      使得target受到伤害，伤害值为value\n    }\n}\n```\n\n**效果是过程事件对游戏内容产生影响的介质**\n\n过程事件只是一个记录性质的对象，其并不会实际地对游戏内容产生改变\n\n### 产生效果时，也会创建过程事件\n\n这是因为产生效果本质上也是一次事件，并且需要进行相应的触发，例如：\n\n【角色】使用【火焰药水】对【小石怪】【造成10点伤害】\n\n在处理这个效果时，会收到一个过程事件与这个效果自身：\n\n```ts\n{\n    source:角色,\n    medium:火焰药水,\n    target:小石怪,\n    effect:……\n},\neffect:造成伤害\n```\n\n过程事件中的effect参数在当前情况下就是效果本身，但此时我们假设其是任意一个效果\n\n我们从过程事件中提取【造成伤害】效果的来源、媒介和目标，然后用【造成伤害】效果将其组合为一个过程事件，接着触发该过程事件，触发关键词为\"造成伤害“\n\n此时我们就使得source:角色接受到了”make 造成伤害”的触发\n使得target:小石怪接受到了“take 造成伤害”的触发\n\n## 效果作用的目标是效果\n\n例如“减少受到的伤害”，会使得自身受到的伤害效果的value减少\n那么其target应该是Effect吗？那么source又该是什么？\n或者这么说，某个效果是一个“触发器效果”，其只会在触发器内被调用，触发器内必定会传入调用该触发的效果，因此其也必定会接收到一个效果\n\n或者更实际一点：【石肤】器官的效果是：生效时，令自身受到的伤害-1\n\n这个效果应该如何作用？\n1.在【石肤】器官生效时，为自身添加触发器：【before 受到伤害：伤害效果值-1】\n2.自身受到伤害效果，产生“伤害事件”，其目标是自身\n3.before take 伤害触发器被触发，传入上述的”伤害事件“其中包含伤害效果\n4.在回调函数中获取这个效果，并将其效果值-1\n5.伤害效果触发，对自身造成效果值-1后的伤害\n\n效果来源：【石肤】器官\n效果目标：自身\n效果内容：生效时，为自身添加触发器：【before 受到伤害：伤害效果值-1】\n\n【伤害效果值-1】是一个效果吧？？？这个效果的来源和目标分别是什么？？？\n\n效果要怎么传递一个过程事件？？？\n\n比如上述的例子，媒介是什么？？？是器官吗？是\n","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-707.9589836164996,169.71059404940087],"size":[92,76],"text":"目标","uuid":"240f65f4-a1df-4455-980f-37b946be6551","details":"游戏内的目标分为3中：器官，角色，敌人\n","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-877.7096552059197,169.71059404940087],"size":[92,76],"text":"物品","uuid":"1b099440-f992-4711-82ab-71e0a4f3cd1a","details":"物品在通常情况下都是\n","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-812.2823865958014,376.88404182842544],"size":[156,76],"text":"行为事件","uuid":"3a690632-9241-49d2-859e-1f39e676270e","details":"","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-812.2823865958014,592.231327239405],"size":[156,76],"text":"效果事件","uuid":"1843b692-a9dc-4e16-bcd2-104458146823","details":"","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-796.2823865958014,765.1157676397689],"size":[124,76],"text":"触发器","uuid":"bc451cf4-73ef-4416-a234-0b4d172a2c0b","details":"","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"},{"location":[-1254.1680032721624,417.3869007038992],"size":[156,76],"text":"获取器官","uuid":"e0ec8ea4-4486-4e24-85a6-a5f58e793942","details":"角色 获取了器官 石肤\n\n这个事件中，谁获得了器官\n","color":[0,0,0,0],"type":"core:text_node","sizeAdjust":"auto"}],"associations":[{"source":"e22879ff-6af5-4024-86dd-046271cbcf1c","target":"8a8d1f62-ec7b-4c54-aac4-3b09e48e7b4f","text":"","uuid":"bc23afb8-4537-4be4-aae9-acc451ed207c","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"8a8d1f62-ec7b-4c54-aac4-3b09e48e7b4f","target":"e96510a1-f118-43f8-81f0-73a0f76d92fa","text":"","uuid":"cfa72d6c-962b-41ab-9aea-e583fde45456","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"b183e091-cbd1-4ea0-b796-8e0c10fe5578","target":"e96510a1-f118-43f8-81f0-73a0f76d92fa","text":"","uuid":"fc9bc9a2-38d1-4135-8074-89746eeb1d95","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"8a8d1f62-ec7b-4c54-aac4-3b09e48e7b4f","target":"b183e091-cbd1-4ea0-b796-8e0c10fe5578","text":"","uuid":"734ffb56-0f81-407c-a2f8-79065105eea6","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"e96510a1-f118-43f8-81f0-73a0f76d92fa","target":"8a8d1f62-ec7b-4c54-aac4-3b09e48e7b4f","text":"","uuid":"9c087558-25ac-446a-b52f-5a584673ed9a","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"240f65f4-a1df-4455-980f-37b946be6551","target":"e22879ff-6af5-4024-86dd-046271cbcf1c","text":"","uuid":"eeb04d5f-e114-4286-844c-b00a47357cb6","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"1b099440-f992-4711-82ab-71e0a4f3cd1a","target":"e22879ff-6af5-4024-86dd-046271cbcf1c","text":"","uuid":"94987f49-2551-48d2-9233-872e351b9f7b","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"3a690632-9241-49d2-859e-1f39e676270e","target":"1843b692-a9dc-4e16-bcd2-104458146823","text":"会先创建一个行为事件","uuid":"21744f9f-2174-4c82-90cf-7649b0a6d404","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"1843b692-a9dc-4e16-bcd2-104458146823","target":"bc451cf4-73ef-4416-a234-0b4d172a2c0b","text":"","uuid":"731b38ec-0333-4777-9167-7243acb6b35e","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]},{"source":"e22879ff-6af5-4024-86dd-046271cbcf1c","target":"b183e091-cbd1-4ea0-b796-8e0c10fe5578","text":"","uuid":"72b5d9d4-642e-4d45-b9e7-ebdd2f98eb12","type":"core:line_edge","color":[0,0,0,0],"sourceRectRate":[0.5,0.5],"targetRectRate":[0.5,0.5]}],"tags":["e22879ff-6af5-4024-86dd-046271cbcf1c","b183e091-cbd1-4ea0-b796-8e0c10fe5578","8a8d1f62-ec7b-4c54-aac4-3b09e48e7b4f","e96510a1-f118-43f8-81f0-73a0f76d92fa"]}